//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.12.0
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from C:\Users\Cole\source\repos\MetaParser\MetaParser.WPF\Expressions\MetaExpressions.g4 by ANTLR 4.12.0

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419


using Antlr4.Runtime.Misc;
using IErrorNode = Antlr4.Runtime.Tree.IErrorNode;
using ITerminalNode = Antlr4.Runtime.Tree.ITerminalNode;
using IToken = Antlr4.Runtime.IToken;
using ParserRuleContext = Antlr4.Runtime.ParserRuleContext;

/// <summary>
/// This class provides an empty implementation of <see cref="IMetaExpressionsListener"/>,
/// which can be extended to create a listener which only needs to handle a subset
/// of the available methods.
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.12.0")]
[System.Diagnostics.DebuggerNonUserCode]
[System.CLSCompliant(false)]
public partial class MetaExpressionsBaseListener : IMetaExpressionsListener {
	/// <summary>
	/// Enter a parse tree produced by <see cref="MetaExpressionsParser.parse"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterParse([NotNull] MetaExpressionsParser.ParseContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="MetaExpressionsParser.parse"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitParse([NotNull] MetaExpressionsParser.ParseContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>bitshiftOps</c>
	/// labeled alternative in <see cref="MetaExpressionsParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterBitshiftOps([NotNull] MetaExpressionsParser.BitshiftOpsContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>bitshiftOps</c>
	/// labeled alternative in <see cref="MetaExpressionsParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitBitshiftOps([NotNull] MetaExpressionsParser.BitshiftOpsContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>numericAtomExp</c>
	/// labeled alternative in <see cref="MetaExpressionsParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterNumericAtomExp([NotNull] MetaExpressionsParser.NumericAtomExpContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>numericAtomExp</c>
	/// labeled alternative in <see cref="MetaExpressionsParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitNumericAtomExp([NotNull] MetaExpressionsParser.NumericAtomExpContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>catchallAtomExp</c>
	/// labeled alternative in <see cref="MetaExpressionsParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterCatchallAtomExp([NotNull] MetaExpressionsParser.CatchallAtomExpContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>catchallAtomExp</c>
	/// labeled alternative in <see cref="MetaExpressionsParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitCatchallAtomExp([NotNull] MetaExpressionsParser.CatchallAtomExpContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>bitwiseComplementOp</c>
	/// labeled alternative in <see cref="MetaExpressionsParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterBitwiseComplementOp([NotNull] MetaExpressionsParser.BitwiseComplementOpContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>bitwiseComplementOp</c>
	/// labeled alternative in <see cref="MetaExpressionsParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitBitwiseComplementOp([NotNull] MetaExpressionsParser.BitwiseComplementOpContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>mulDivExp</c>
	/// labeled alternative in <see cref="MetaExpressionsParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterMulDivExp([NotNull] MetaExpressionsParser.MulDivExpContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>mulDivExp</c>
	/// labeled alternative in <see cref="MetaExpressionsParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitMulDivExp([NotNull] MetaExpressionsParser.MulDivExpContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>boolAtomExp</c>
	/// labeled alternative in <see cref="MetaExpressionsParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterBoolAtomExp([NotNull] MetaExpressionsParser.BoolAtomExpContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>boolAtomExp</c>
	/// labeled alternative in <see cref="MetaExpressionsParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitBoolAtomExp([NotNull] MetaExpressionsParser.BoolAtomExpContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>getvarAtomExp</c>
	/// labeled alternative in <see cref="MetaExpressionsParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterGetvarAtomExp([NotNull] MetaExpressionsParser.GetvarAtomExpContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>getvarAtomExp</c>
	/// labeled alternative in <see cref="MetaExpressionsParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitGetvarAtomExp([NotNull] MetaExpressionsParser.GetvarAtomExpContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>setVarExp</c>
	/// labeled alternative in <see cref="MetaExpressionsParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSetVarExp([NotNull] MetaExpressionsParser.SetVarExpContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>setVarExp</c>
	/// labeled alternative in <see cref="MetaExpressionsParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSetVarExp([NotNull] MetaExpressionsParser.SetVarExpContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>getindexAtomExp</c>
	/// labeled alternative in <see cref="MetaExpressionsParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterGetindexAtomExp([NotNull] MetaExpressionsParser.GetindexAtomExpContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>getindexAtomExp</c>
	/// labeled alternative in <see cref="MetaExpressionsParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitGetindexAtomExp([NotNull] MetaExpressionsParser.GetindexAtomExpContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>bitwiseOps</c>
	/// labeled alternative in <see cref="MetaExpressionsParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterBitwiseOps([NotNull] MetaExpressionsParser.BitwiseOpsContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>bitwiseOps</c>
	/// labeled alternative in <see cref="MetaExpressionsParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitBitwiseOps([NotNull] MetaExpressionsParser.BitwiseOpsContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>addSubExp</c>
	/// labeled alternative in <see cref="MetaExpressionsParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAddSubExp([NotNull] MetaExpressionsParser.AddSubExpContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>addSubExp</c>
	/// labeled alternative in <see cref="MetaExpressionsParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAddSubExp([NotNull] MetaExpressionsParser.AddSubExpContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>booleanComparisonExp</c>
	/// labeled alternative in <see cref="MetaExpressionsParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterBooleanComparisonExp([NotNull] MetaExpressionsParser.BooleanComparisonExpContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>booleanComparisonExp</c>
	/// labeled alternative in <see cref="MetaExpressionsParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitBooleanComparisonExp([NotNull] MetaExpressionsParser.BooleanComparisonExpContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>stringAtomExp</c>
	/// labeled alternative in <see cref="MetaExpressionsParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterStringAtomExp([NotNull] MetaExpressionsParser.StringAtomExpContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>stringAtomExp</c>
	/// labeled alternative in <see cref="MetaExpressionsParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitStringAtomExp([NotNull] MetaExpressionsParser.StringAtomExpContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>regexExp</c>
	/// labeled alternative in <see cref="MetaExpressionsParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterRegexExp([NotNull] MetaExpressionsParser.RegexExpContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>regexExp</c>
	/// labeled alternative in <see cref="MetaExpressionsParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitRegexExp([NotNull] MetaExpressionsParser.RegexExpContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>powerExp</c>
	/// labeled alternative in <see cref="MetaExpressionsParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterPowerExp([NotNull] MetaExpressionsParser.PowerExpContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>powerExp</c>
	/// labeled alternative in <see cref="MetaExpressionsParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitPowerExp([NotNull] MetaExpressionsParser.PowerExpContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>comparisonExp</c>
	/// labeled alternative in <see cref="MetaExpressionsParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterComparisonExp([NotNull] MetaExpressionsParser.ComparisonExpContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>comparisonExp</c>
	/// labeled alternative in <see cref="MetaExpressionsParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitComparisonExp([NotNull] MetaExpressionsParser.ComparisonExpContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>functionCall</c>
	/// labeled alternative in <see cref="MetaExpressionsParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFunctionCall([NotNull] MetaExpressionsParser.FunctionCallContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>functionCall</c>
	/// labeled alternative in <see cref="MetaExpressionsParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFunctionCall([NotNull] MetaExpressionsParser.FunctionCallContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>hexNumberAtomExp</c>
	/// labeled alternative in <see cref="MetaExpressionsParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterHexNumberAtomExp([NotNull] MetaExpressionsParser.HexNumberAtomExpContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>hexNumberAtomExp</c>
	/// labeled alternative in <see cref="MetaExpressionsParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitHexNumberAtomExp([NotNull] MetaExpressionsParser.HexNumberAtomExpContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>parenthesisExp</c>
	/// labeled alternative in <see cref="MetaExpressionsParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterParenthesisExp([NotNull] MetaExpressionsParser.ParenthesisExpContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>parenthesisExp</c>
	/// labeled alternative in <see cref="MetaExpressionsParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitParenthesisExp([NotNull] MetaExpressionsParser.ParenthesisExpContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="MetaExpressionsParser.expressionList"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterExpressionList([NotNull] MetaExpressionsParser.ExpressionListContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="MetaExpressionsParser.expressionList"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitExpressionList([NotNull] MetaExpressionsParser.ExpressionListContext context) { }

	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void EnterEveryRule([NotNull] ParserRuleContext context) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void ExitEveryRule([NotNull] ParserRuleContext context) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void VisitTerminal([NotNull] ITerminalNode node) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void VisitErrorNode([NotNull] IErrorNode node) { }
}
